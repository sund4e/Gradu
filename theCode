# install.packages("RPostgreSQL")
# get all required packages & libraries
# tidyr
require("RPostgreSQL")
require(data.table)
require(plyr)
 
# create a connection 
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")

# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "smartly_production",
                 host = "localhost", port = 63333,
                 user = "smartly", password = "")

#-- Create data tables from postgre --#
adsets_q1 <- dbGetQuery(con, statement = paste(
	"SELECT campaigns.id AS campaign_id, ad_sets.adgroup_id, ad_sets.date, campaigns.objective
	FROM campaigns
	INNER JOIN (
		SELECT adgroup_id, date, campaign_id
		FROM ad_stats
		WHERE ad_stats.date BETWEEN '2015-01-01' AND '2015-03-31'
		GROUP BY campaign_id, adgroup_id, date
		HAVING SUM(impressions) > 0
		) AS ad_sets
		ON ad_sets.campaign_id = campaigns.id
	WHERE campaigns.objective IS NOT NULL AND campaigns.campaign_type NOT IN ('product_feed', 'reach_frequency', 'page_post_boosting')"
));

adsets_q2 <- dbGetQuery(con, statement = paste(
	"SELECT campaigns.id AS campaign_id, ad_sets.adgroup_id, ad_sets.date, campaigns.objective
	FROM campaigns
	INNER JOIN (
		SELECT adgroup_id, date, campaign_id
		FROM ad_stats
		WHERE ad_stats.date BETWEEN '2015-04-01' AND '2015-06-30'
		GROUP BY campaign_id, adgroup_id, date
		HAVING SUM(impressions) > 0
		) AS ad_sets
		ON ad_sets.campaign_id = campaigns.id
	WHERE campaigns.objective IS NOT NULL AND campaigns.campaign_type NOT IN ('product_feed', 'reach_frequency', 'page_post_boosting')"
));

adsets_q3 <- dbGetQuery(con, statement = paste(
	"SELECT campaigns.id AS campaign_id, ad_sets.adgroup_id, ad_sets.date, campaigns.objective
	FROM campaigns
	INNER JOIN (
		SELECT adgroup_id, date, campaign_id
		FROM ad_stats
		WHERE ad_stats.date BETWEEN '2015-07-01' AND '2015-09-30'
		GROUP BY campaign_id, adgroup_id, date
		HAVING SUM(impressions) > 0
		) AS ad_sets
		ON ad_sets.campaign_id = campaigns.id
	WHERE campaigns.objective IS NOT NULL AND campaigns.campaign_type NOT IN ('product_feed', 'reach_frequency', 'page_post_boosting')"
));

adsets_q4 <- dbGetQuery(con, statement = paste(
	"SELECT campaigns.id AS campaign_id, ad_sets.adgroup_id, ad_sets.date, campaigns.objective
	FROM campaigns
	INNER JOIN (
		SELECT adgroup_id, date, campaign_id
		FROM ad_stats
		WHERE ad_stats.date BETWEEN '2015-10-01' AND '2015-12-31'
		GROUP BY campaign_id, adgroup_id, date
		HAVING SUM(impressions) > 0
		) AS ad_sets
		ON ad_sets.campaign_id = campaigns.id
	WHERE campaigns.objective IS NOT NULL AND campaigns.campaign_type NOT IN ('product_feed', 'reach_frequency', 'page_post_boosting')"
));

#join the above data frames & create data.table
adsets_h1 <- rbind(adsets_q1, adsets_q2)
adsets_h2 <- rbind(adsets_q3, adsets_q4)
adsets_df <- rbind(adsets_h1, adsets_h2)
# save the dataframe: save(adsets_df, file = "adsets_df_050316.RData")

#Create table & set keys
adsets <- data.table(adsets_df)
keycols = c("adgroup_id","date")
setkeyv(adsets,keycols)

#Create table for campaigns
by_campaign <- group_by(adsets, campaign_id, date)
campaigns <- summarise(
	by_campaign,
  adset_count = n(),
  objective = objective)
campaigns <- filter(campaigns, adset_count > 1)